package ${package.Controller};


import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;
import org.springframework.beans.factory.annotation.Autowired;

import ${package.Entity}.${entity};
import ${package.ServiceImpl}.${entity}ServiceImpl;


/**
 * @author ${author}
 * @version 1.0
 * @date ${date}
 */
@Api(value = "${table.comment}管理")
@RestController
@RequestMapping("/${package.ModuleName}")
public class ${table.controllerName} {

    @Autowired
    private ${entity}ServiceImpl ${table.entityPath}Service;


    /**
     * ${table.comment}新增
     *
     * @param request
     * @param bindingResult
     * @return ResponseEntity<?>
     */
    @ApiOperation(value = "${table.comment}新增", httpMethod = "POST", produces = "application/json", response = ResponseEntity.class)
    @ResponseBody
    @PostMapping("/add")
    public ResponseEntity<?> add(@Valid @RequestBody ${entity} request, BindingResult bindingResult) throws UnsupportedEncodingException {
        if (bindingResult.hasErrors()) {
            return ResponseEntity.ok(Result.body(request, ResultType.CHECK_ERROR).withMessage(bindingResult.getFieldError().getDefaultMessage()));
        }
        Result result = ${table.entityPath}Service.save(request);
        return ResponseEntity.ok(result);
    }

    /**
     * ${table.comment}修改
     *
     * @param request
     * @param bindingResult
     * @return ResponseEntity<?>
     */
    @ApiOperation(value = "${table.comment}修改", httpMethod = "POST", produces = "application/json", response = ResponseEntity.class)
    @ResponseBody
    @PostMapping("/edit")
    public ResponseEntity<?> edit(@Valid @RequestBody ${entity} request, BindingResult bindingResult) throws UnsupportedEncodingException {
        if (bindingResult.hasErrors()) {
            return ResponseEntity.ok(Result.body(request, ResultType.CHECK_ERROR).withMessage(bindingResult.getFieldError().getDefaultMessage()));
        }
        Result result = ${table.entityPath}Service.edit(request);
        return ResponseEntity.ok(result);
    }

    /**
     * ${table.comment}删除
     *
     * @param id id
     * @return ResponseEntity<?>
     */
    @ApiOperation(value = "${table.comment}删除", httpMethod = "GET", produces = "application/json", response = ResponseEntity.class)
    @ResponseBody
    @GetMapping("/delete")
    public ResponseEntity<?> delete(@ApiParam(name = "id", value = "${table}id") @RequestParam(defaultValue = "", required = false) Long id) {
        Result result = ${table.entityPath}Service.deleteById(id);
        return ResponseEntity.ok(result);
    }


    /**
     * ${table.comment}分页
    *
     * @return ResponseEntity<?>
    */
    @ApiOperation(value = "${table.comment}分页")
    @GetMapping("/list")
    public ResponseEntity<?> list(InstructionPageRequest request) {
        Result result = instructionService.findPage(request);
        return ResponseEntity.ok(result);
        }

    /**
    * ${table.comment}详情
    *
    * @return ResponseEntity<?>
    */
    @ApiOperation(value = "${table.comment}详情", httpMethod = "GET", produces = "application/json", response = ResponseEntity.class)
    @ResponseBody
    @GetMapping("/getById")
    public ResponseEntity<?> getById(
    @RequestParam(defaultValue = "", required = true) Long id) throws UnsupportedEncodingException {
        Result result = instructionService.getById(id);
        return ResponseEntity.ok(result);
    }
}
